name: CI


on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]



jobs:

  portal-backend-integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v1
      
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.5
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ./tests/portal_backend_integration_tests/setup/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('./tests/portal_backend_integration_tests/setup/pyproject.toml') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        working-directory: ./tests/portal_backend_integration_tests/setup/
        run: poetry install --no-interaction

      - name: Configure the deployment env file
        run: cat .versions_env >> tests/portal_backend_integration_tests/setup/.env

      - name: Deploy portalbackend, exareme and mip-engine
        working-directory: ./tests/portal_backend_integration_tests/setup/
        run: docker-compose --env-file .env up -d

      - name: Initialize MONETDBs with mipdb initial metadata tables
        working-directory: ./tests/portal_backend_integration_tests/setup/
        run: |
          poetry run mipdb init --ip 127.0.0.1 --port 50001
          poetry run mipdb init --ip 127.0.0.1 --port 50002

      - name: Load data into MONETDB containers
        working-directory: ./tests/portal_backend_integration_tests/setup/
        run: |
          poetry run mipdb init --ip 127.0.0.1 --port 50001
          poetry run mipdb add-data-model ../../../data/tbi/CDEsMetadata.json --ip 127.0.0.1 --port 50001 
          poetry run mipdb add-dataset ../../../data/tbi/dummy_tbi.csv -d tbi -v 0.1 --ip 127.0.0.1 --port 50001 
          poetry run mipdb add-data-model ../../../data/dementia/CDEsMetadata.json --ip 127.0.0.1 --port 50001 
          poetry run mipdb add-dataset ../../../data/dementia/desd-synthdata.csv -d dementia -v 0.1 --ip 127.0.0.1 --port 50001 
          poetry run mipdb add-dataset ../../../data/dementia/ppmi.csv -d dementia -v 0.1 --ip 127.0.0.1 --port 50001 
          poetry run mipdb init --ip 127.0.0.1 --port 50002
          poetry run mipdb add-data-model ../../../data/mentalhealth/CDEsMetadata.json --ip 127.0.0.1 --port 50002 
          poetry run mipdb add-dataset ../../../data/mentalhealth/demo.csv -d mentalhealth -v 0.1 --ip 127.0.0.1 --port 50002 
          poetry run mipdb add-data-model ../../../data/dementia/CDEsMetadata.json --ip 127.0.0.1 --port 50002 
          poetry run mipdb add-dataset ../../../data/dementia/edsd.csv -d dementia -v 0.1 --ip 127.0.0.1 --port 50002 
          poetry run mipdb add-dataset ../../../data/dementia/fake_longitudinal.csv -d dementia -v 0.1 --ip 127.0.0.1 --port 50002 

      - name: Wait for services to be up
        uses: jakejarvis/wait-action@master
        with:
          time: '120s'

      - name: Get deployment status
        run: docker ps

      - name: Run the success tests
        working-directory: ./tests/portal_backend_integration_tests/setup/
        run: poetry run pytest ../success

      - name: Run the failure tests
        working-directory: ./tests/portal_backend_integration_tests/setup/
        run: poetry run pytest ../fail

      - name: Run the federation info tests
        working-directory: ./tests/portal_backend_integration_tests/setup/
        run: poetry run pytest ../test_federation_info.py

