apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-vol
  namespace: {{ .Values.namespace }}
  labels:
    storage: elasticsearch-storage
spec:
  capacity:
    storage: {{ .Values.elasticsearch.storage.data_size }}
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: k8s-local-storage
  hostPath:
    path: {{ .Values.elasticsearch.storage.data_path }}
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: master
          operator: In
          values:
          - "true"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-storage-claim
  namespace: {{ .Values.namespace }}
  labels:
    storage: elasticsearch-storage
spec:
  selector:
    matchLabels:
      storage: elasticsearch-storage
  storageClassName: k8s-local-storage
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.elasticsearch.storage.data_size }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data && chmod -R 775 /usr/share/elasticsearch/data"]
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:{{ .Values.elk_version }}
        ports:
        - containerPort: 9200
        env:
        - name: discovery.type
          value: single-node
        - name: xpack.security.enabled
          value: "{{ .Values.security.enabled }}"
        - name: xpack.security.http.ssl.enabled
          value: "{{ .Values.security.ssl_enabled }}"
        - name: ES_JAVA_OPTS 
          value: {{ .Values.elasticsearch.java_opts }}
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: elasticsearch-data
        persistentVolumeClaim:
          claimName: elasticsearch-storage-claim

---

apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: elasticsearch
  ports:
  - port: 9200
    targetPort: 9200
