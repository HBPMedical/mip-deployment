apiVersion: v1
kind: PersistentVolume
metadata:
  name: portalbackend-db-vol0
  namespace: {{ .Values.namespace }}
  labels:
    storage: portalbackend-db-storage0
spec:
  capacity:
    storage: {{ .Values.portalbackend_db.storage.storage0.data_size }}
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: k8s-local-storage
  hostPath:
    path: {{ .Values.portalbackend_db.storage.storage0.data_path }}
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: master
          operator: In
          values:
          - "true"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: portalbackend-db-claim0
  namespace: {{ .Values.namespace }}
  labels:
    storage: portalbackend-db-storage0
spec:
  selector:
    matchLabels:
      storage: portalbackend-db-storage0
  storageClassName: k8s-local-storage
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.portalbackend_db.storage.storage0.data_size }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: portalbackend-vol0
  namespace: {{ .Values.namespace }}
  labels:
    storage: portalbackend-storage0
spec:
  capacity:
    storage: {{ .Values.portalbackend.storage.storage0.data_size }}
  volumeMode: Filesystem
  accessModes:
  - ReadOnlyMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: k8s-local-storage
  hostPath:
    path: {{ .Values.portalbackend.storage.storage0.data_path }}
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: master
          operator: In
          values:
          - "true"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: portalbackend-claim0
  namespace: {{ .Values.namespace }}
  labels:
    storage: portalbackend-storage0
spec:
  selector:
    matchLabels:
      storage: portalbackend-storage0
  storageClassName: k8s-local-storage
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: {{ .Values.portalbackend.storage.storage0.data_size }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: portalbackend-logs-vol0
  namespace: {{ .Values.namespace }}
  labels:
    storage: portalbackend-logs-storage0
spec:
  capacity:
    storage: {{ .Values.portalbackend.logs.storage0.data_size }}
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: k8s-local-storage
  hostPath:
    path: {{ .Values.portalbackend.logs.storage0.data_path }}
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: master
          operator: In
          values:
          - "true"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: portalbackend-logs-claim0
  namespace: {{ .Values.namespace }}
  labels:
    storage: portalbackend-logs-storage0
spec:
  selector:
    matchLabels:
      storage: portalbackend-logs-storage0
  storageClassName: k8s-local-storage
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.portalbackend.logs.storage0.data_size }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portalbackend
  namespace: {{ .Values.namespace }}
  labels:
    app: portalbackend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portalbackend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: portalbackend
    spec:
      nodeSelector:
        master: "true"
      hostname: portalbackend
      volumes:
      - name: portalbackend-db-claim0
        persistentVolumeClaim:
          claimName: portalbackend-db-claim0
      - name: portalbackend-claim0
        persistentVolumeClaim:
          claimName: portalbackend-claim0
      - name: portalbackend-logs-claim0
        persistentVolumeClaim:
          claimName: portalbackend-logs-claim0
      containers:
      - name: portalbackend-db
        image: {{ .Values.portalbackend_db.image.name }}:{{ .Values.portalbackend_db.image.version }}
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: portalbackend-db-claim0
          mountPath: /var/lib/postgresql/data
        args:
        - -p
        - "5432"
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mip-secret
              key: portalbackend-db.DB_ADMIN_PASSWORD

      - name: portalbackend
        image: {{ .Values.portalbackend.image.name }}:{{ .Values.portalbackend.image.version }}
        ports:
        - containerPort: 8080
        - containerPort: 8089
        volumeMounts:
        - name: portalbackend-claim0
          mountPath: /opt/portal/api
        - name: portalbackend-logs-claim0
          mountPath: /var/log/portalbackend
        env:
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: portalbackend.LOG_LEVEL
        - name: LOG_LEVEL_FRAMEWORK
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: portalbackend.LOG_LEVEL_FRAMEWORK
        - name: AUTHENTICATION_ENABLED
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: keycloak.AUTHENTICATION
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://localhost:5432/portal
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: mip-secret
              key: portalbackend-db.PORTAL_DB_USER
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mip-secret
              key: portalbackend-db.PORTAL_DB_PASSWORD
        - name: SERVICES_EXAREME2_ALGORITHMSURL
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: engines.exareme2.ALGORITHMSURL
        - name: SERVICES_EXAREME2_ATTRIBUTESURL
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: engines.exareme2.ATTRIBUTESURL
        - name: SERVICES_EXAREME2_CDESMETADATAURL
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: engines.exareme2.CDESMETADATAURL
        - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: keycloak.ISSUER_URI
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: keycloak.CLIENT_ID
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_SECRET
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: keycloak.CLIENT_SECRET
        - name: SERVICES_ALGORITHMS_UPDATE_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: portalbackend.ALGORITHM_UPDATE_INTERVAL

---
apiVersion: v1
kind: Service
metadata:
  name: portalbackend-service
  namespace: {{ .Values.namespace }}
  labels:
    app: portalbackend
spec:
  selector:
    app: portalbackend
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
  - name: "8080"
    port: 8080
    targetPort: 8080
  {{- if eq .Values.portalbackend.LOG_LEVEL "DEBUG" }}
  type: LoadBalancer
  externalIPs:
  - {{ tpl .Values.frontend.EXTERNAL_IP . }}
  {{- end }}
