{{- if and (eq .Values.keycloak.AUTHENTICATION 1.0) (eq .Values.keycloak.INTERNAL_AUTH 1.0) }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: keycloak-db-vol0
  namespace: {{ .Values.namespace }}
  labels:
    storage: keycloak-db-storage0
spec:
  capacity:
    storage: {{ .Values.keycloak_db.storage.storage0.data_size }}
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: k8s-local-storage
  hostPath:
    path: {{ .Values.keycloak_db.storage.storage0.data_path }}
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: master
          operator: In
          values:
          - "true"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-db-claim0
  namespace: {{ .Values.namespace }}
  labels:
    storage: keycloak-db-storage0
spec:
  selector:
    matchLabels:
      storage: keycloak-db-storage0
  storageClassName: k8s-local-storage
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.keycloak_db.storage.storage0.data_size }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: keycloak-vol0
  namespace: {{ .Values.namespace }}
  labels:
    storage: keycloak-storage0
  annotations:
    config.kubernetes.io/depends-on: apps/namespaces/{{ .Values.namespace }}/PersistentVolume/portalbackend-vol0
spec:
  capacity:
    storage: {{ .Values.keycloak.storage.storage0.data_size }}
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: k8s-local-storage
  hostPath:
    path: {{ .Values.keycloak.storage.storage0.data_path }}
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: master
          operator: In
          values:
          - "true"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-claim0
  namespace: {{ .Values.namespace }}
  labels:
    storage: keycloak-storage0
spec:
  selector:
    matchLabels:
      storage: keycloak-storage0
  storageClassName: k8s-local-storage
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.keycloak.storage.storage0.data_size }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: keycloak-vol1
  namespace: {{ .Values.namespace }}
  labels:
    storage: keycloak-storage1
spec:
  capacity:
    storage: {{ .Values.keycloak.storage.storage1.data_size }}
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: k8s-local-storage
  hostPath:
    path: {{ .Values.keycloak.storage.storage1.data_path }}
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: master
          operator: In
          values:
          - "true"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-claim1
  namespace: {{ .Values.namespace }}
  labels:
    storage: keycloak-storage1
spec:
  selector:
    matchLabels:
      storage: keycloak-storage1
  storageClassName: k8s-local-storage
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.keycloak.storage.storage1.data_size }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: {{ .Values.namespace }}
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      nodeSelector:
        master: "true"
      hostname: keycloak
      volumes:
      - name: keycloak-db-claim0
        persistentVolumeClaim:
          claimName: keycloak-db-claim0
      - name: keycloak-claim0
        persistentVolumeClaim:
          claimName: keycloak-claim0
      - name: keycloak-claim1
        persistentVolumeClaim:
          claimName: keycloak-claim1
      containers:
      - name: keycloak-db
        image: {{ .Values.keycloak_db.image.name }}:{{ .Values.keycloak_db.image.version }}
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: keycloak-db-claim0
          mountPath: /var/lib/postgresql/data
        env:
        - name: POSTGRES_DB
          value: keycloak
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: mip-secret
              key: keycloak-db.POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mip-secret
              key: keycloak-db.POSTGRES_PASSWORD

      - name: keycloak
        image: {{ .Values.keycloak.image.name }}:{{ .Values.keycloak.image.version }}
        ports:
        - containerPort: 8095
        volumeMounts:
        - name: keycloak-claim0
          mountPath: /tmp
        - name: keycloak-claim1
          mountPath: /opt/jboss/keycloak/themes/HBPTheme
        args:
        - -Djboss.http.port=8095
        env:
        - name: DB_ADDR
          value: localhost
        - name: DB_PORT
          value: "5432"
        - name: DB_VENDOR
          value: POSTGRES
        - name: DB_DATABASE
          value: keycloak
        - name: DB_SCHEMA
          value: public
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: mip-secret
              key: keycloak-db.POSTGRES_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mip-secret
              key: keycloak-db.POSTGRES_PASSWORD
        - name: KEYCLOAK_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: keycloak.HOSTNAME
        - name: KEYCLOAK_IMPORT
          value: /tmp/keycloak.json
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              name: mip-secret
              key: keycloak.KEYCLOAK_USER
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mip-secret
              key: keycloak.KEYCLOAK_PASSWORD
        - name: PROXY_ADDRESS_FORWARDING
          valueFrom:
            configMapKeyRef:
              name: mip-config
              key: keycloak.PROXY_ADDRESS_FORWARDING

---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
  labels:
    app: keycloak
spec:
  selector:
    app: keycloak
  ports:
  - name: "8095"
    port: 8095
    targetPort: 8095
{{- end }}
