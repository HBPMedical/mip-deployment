apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: fleet-server
  namespace: default
spec:
  version: 8.17.1
  kibanaRef:
    name: kibana
  elasticsearchRefs:
  - name: elasticsearch
  mode: fleet
  fleetServerEnabled: true
  policyID: eck-fleet-server
  deployment:
    replicas: 1
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
---

apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: elastic-agent
  namespace: default
spec:
  version: 8.17.1
  kibanaRef:
    name: kibana
  fleetServerRef:
    name: fleet-server
  mode: fleet
  policyID: eck-agent
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
        volumes:
        - name: agent-data
          emptyDir: {}

---

apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
  namespace: default
spec:
  version: 8.17.1
  count: 1
  elasticsearchRef:
    name: elasticsearch
  config:
    server.basePath: "/eck"
    server.rewriteBasePath: "true"
    server.publicBaseUrl: "https://10.86.204.160:31000/eck"
    xpack.fleet.agents.kibana.hosts: ["https://10.86.204.160:31000/eck"]
    xpack.fleet.agents.elasticsearch.hosts: ["https://datacatalogue.mip.ebrains.eu/elastic"]
    xpack.fleet.agents.fleet_server.hosts: ["https://10.86.204.160:31002"]
    xpack.fleet.packages:
      - name: system
        version: latest
      - name: elastic_agent
        version: latest
      - name: fleet_server
        version: latest
    xpack.fleet.agentPolicies:
      - name: Fleet Server on ECK policy
        id: eck-fleet-server
        namespace: default
        is_managed: true
        monitoring_enabled:
          - logs
          - metrics
        unenroll_timeout: 900
        package_policies:
        - name: fleet_server-1
          id: fleet_server-1
          package:
            name: fleet_server
      - name: Elastic Agent on ECK policy
        id: eck-agent
        namespace: default
        is_managed: true
        monitoring_enabled:
          - logs
          - metrics
        unenroll_timeout: 900
        package_policies:
          - name: system-1
            id: system-1
            package:
              name: system
---

apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  namespace: default
spec:
  version: 8.17.1
  nodeSets:
  - name: default
    count: 1
    config:
      node.store.allow_mmap: false
    # volumeClaimTemplates:
    #   - metadata:
    #       name: elasticsearch-data
    #     spec:
    #       accessModes: [ "ReadWriteOnce" ]
    #       resources:
    #         requests:
    #           storage: {{ .Values.elasticsearch.storage_size }}
    #       storageClassName: {{ .Values.storageClass }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - get
  - create
  - update
- apiGroups: ["apps"]
  resources:
  - replicasets
  verbs:
  - list
  - watch
- apiGroups: ["batch"]
  resources:
  - jobs
  verbs:
  - list
  - watch

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-agent
  namespace: default

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-agent
subjects:
- kind: ServiceAccount
  name: elastic-agent
  namespace: default
roleRef:
  kind: ClusterRole
  name: elastic-agent
  apiGroup: rbac.authorization.k8s.io
---
# Expose Kibana on NodePort 31000 (maps to target port 5601)
apiVersion: v1
kind: Service
metadata:
  name: kibana-nodeport
  namespace: default
spec:
  type: NodePort
  selector:
    kibana.k8s.elastic.co/name: kibana
  ports:
    - name: http
      port: 5601
      targetPort: 5601
      nodePort: 31000
---
# Expose Elasticsearch HTTP on NodePort 31001 (maps to target port 9200)
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-nodeport
  namespace: default
spec:
  type: NodePort
  selector:
    elasticsearch.k8s.elastic.co/cluster-name: elasticsearch
  ports:
    - name: http
      port: 9200
      targetPort: 9200
      nodePort: 31001
---
# Expose Fleet Server on NodePort 31002 (maps to target port 8220)
apiVersion: v1
kind: Service
metadata:
  name: fleet-server-nodeport
  namespace: default
spec:
  type: NodePort
  selector:
    agent.k8s.elastic.co/name: fleet-server
  ports:
    - name: fleet-server
      port: 8220
      targetPort: 8220
      nodePort: 31002
